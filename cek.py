import telebotimport randomimport stringimport requestsimport jsonimport osfrom voc import read_vouchers, save_vouchers  # Import dari voc.py# Token bot TelegramTOKEN = "8167656970:AAEhe6IyRBBTGR3DRpbmOVJIe-nRkDbMSHE"bot = telebot.TeleBot(TOKEN)# File JSON untuk menyimpan saldosaldo_file = "user_saldo.json"# Fungsi untuk membaca saldo dari filedef read_saldo():    if os.path.exists(saldo_file):        with open(saldo_file, 'r') as file:            return json.load(file)    return {}# Fungsi untuk menyimpan saldo ke filedef save_saldo(saldo):    with open(saldo_file, 'w') as file:        json.dump(saldo, file)# Fungsi untuk mendapatkan IP acakdef random_ip():    return '.'.join(str(random.randint(0, 255)) for _ in range(4))# Fungsi untuk mengambil substring antara dua stringdef get_between(text, start, end):    start_index = text.find(start)    if start_index == -1:        print(f"Start string '{start}' not found in the response")        return None    start_index += len(start)    end_index = text.find(end, start_index)    if end_index == -1:        print(f"End string '{end}' not found in the response")        return None    print(f"Found token: {text[start_index:end_index]}")    return text[start_index:end_index]# Fungsi untuk mengirim request POSTdef post_data(url, data, headers):    try:        print(f"Request URL: {url}")        print(f"Request Data: {data}")        response = requests.post(url, data=data, headers=headers)        print(f"Response Status Code: {response.status_code}")        print(f"Response Text: {response.text}")        return response.text    except Exception as e:        print(f"‚ùå Error: {e}")        return ""# Handler untuk command /start@bot.message_handler(commands=['start'])def send_welcome(message):    chat_id = message.chat.id    bot.send_message(chat_id, "Selamat datang di bot ini!\nKetik /saldo untuk cek saldo.\nGunakan /order @username jumlah_order untuk memesan.\nGunakan /topup jumlah untuk isi saldo.")# Handler untuk cek saldo@bot.message_handler(commands=['saldo'])def check_saldo(message):    chat_id = message.chat.id    user_saldo = read_saldo()    saldo = user_saldo.get(str(chat_id), 0)    bot.send_message(chat_id, f"üí∞ Saldo Anda: Rp{saldo}")# Handler untuk topup saldo@bot.message_handler(commands=['topup'])def topup_saldo(message):    chat_id = message.chat.id    bot.send_message(chat_id, "Masukkan jumlah saldo yang ingin Anda top-up:")    bot.register_next_step_handler(message, request_voucher)# Handler untuk meminta kode voucherdef request_voucher(message):    chat_id = message.chat.id    jumlah_saldo = message.text.strip()    # Validasi jumlah saldo    try:        jumlah_saldo = int(jumlah_saldo)        if jumlah_saldo <= 0:            raise ValueError    except ValueError:        bot.send_message(chat_id, "‚ö†Ô∏è Masukkan jumlah saldo yang valid.")        return    bot.send_message(chat_id, "Masukkan kode voucher untuk top-up saldo:")    bot.register_next_step_handler(message, validate_voucher, jumlah_saldo)# Handler untuk validasi kode voucherdef validate_voucher(message, jumlah_saldo):    chat_id = message.chat.id    voucher_code = message.text.strip().upper()    vouchers = read_vouchers()    if voucher_code in vouchers and vouchers[voucher_code] == True:        user_saldo = read_saldo()        user_saldo[str(chat_id)] = user_saldo.get(str(chat_id), 0) + jumlah_saldo  # Top-up sesuai jumlah yang dimasukkan        vouchers[voucher_code] = False  # Tandai sebagai sudah digunakan        save_saldo(user_saldo)        save_vouchers(vouchers)        bot.send_message(chat_id, f"‚úÖ Topup berhasil! Saldo Anda sekarang: Rp{user_saldo[str(chat_id)]}")    else:        bot.send_message(chat_id, "‚ö†Ô∏è Kode voucher tidak valid atau sudah digunakan.")# Handler untuk command /order@bot.message_handler(commands=['order'])def handle_order_command(message):    chat_id = message.chat.id    try:        parts = message.text.split(' ')        username = parts[1]        jumlah_order = int(parts[2])    except (IndexError, ValueError):        bot.send_message(chat_id, "‚ö†Ô∏è Format salah! Gunakan: /order @username jumlah_order")        return    biaya_total = jumlah_order * 150  # Misalnya harga per order 150 IDR    user_saldo = read_saldo()    saldo_pengguna = user_saldo.get(str(chat_id), 0)    if saldo_pengguna < biaya_total:        bot.send_message(chat_id, f"‚ùå Saldo tidak cukup! Anda butuh Rp{biaya_total}")        return    user_saldo[str(chat_id)] -= biaya_total  # Kurangi saldo sesuai biaya total    save_saldo(user_saldo)  # Simpan saldo setelah pengurangan    sukses, gagal = 0, 0    for i in range(jumlah_order):        bot.send_message(chat_id, f"üîÑ Memproses order ke-{i+1} untuk {username}...")        pshid = ''.join(random.choices(string.ascii_letters + string.digits, k=25))        random_ip_address = random_ip()        headers = {            "Host": "boostgrams.com",            "Connection": "keep-alive",            "Content-Type": "application/x-www-form-urlencoded",            "X-Forwarded-For": random_ip_address,            "Cookie": f"PHPSESSID={pshid}",            "User-Agent": "Mozilla/5.0 (Linux; Android 12; M2010J19SG Build/SKQ1.211202.001) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.6668.100 Mobile Safari/537.36",            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",            "X-Requested-With": "mark.via.gp",            "Referer": "https://picknspin.gg/main/hadetail.php?id=6748b3920873c3.97371482",        }        data = {            'ns_action': 'freetool_start',            'freetool[id]': '4',            'freetool[token]': '',            'freetool[process_item]': username,            'freetool[quantity]': '5'        }        # Step 1: Kirim data untuk mendapatkan token        response = post_data("https://boostgrams.com/action/", data, headers)        token = get_between(response, '"freetool_process_token":"', '"')        if token:            print(f"Token diperoleh: {token}")            # Step 2: Kirim ulang data dengan token yang diperoleh            data2 = {                'ns_action': 'freetool_start',                'freetool[id]': '4',                'freetool[token]': token,                'freetool[process_item]': username,                'freetool[quantity]': '5'            }            response2 = post_data("https://boostgrams.com/action/", data2, headers)            token2 = get_between(response2, '"freetool_process_success": "', '"')            if token2:                sukses += 1                bot.send_message(chat_id, f"‚úÖ Order ke-{i+1} berhasil!\n\nTrx ID: {token2}")            else:                gagal += 1                bot.send_message(chat_id, f"‚ùå Order ke-{i+1} gagal!")        else:            gagal += 1            bot.send_message(chat_id, f"‚ùå Order ke-{i+1} gagal!")    # Menampilkan jumlah sukses dan gagal    bot.send_message(chat_id, f"üéØ Order selesai! ‚úÖ {sukses} sukses, ‚ùå {gagal} gagal.")        # Tampilkan saldo tersisa setelah pemesanan selesai    saldo_tersisa = user_saldo.get(str(chat_id), 0)    bot.send_message(chat_id, f"üí∞ Saldo Anda sekarang: Rp{saldo_tersisa}")# Jalankan botprint("Bot sedang berjalan...")bot.polling(none_stop=True)